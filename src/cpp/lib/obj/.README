##############################################################################
##
##       Copyright (C) 2018 Frank Eskesen.
##
##       This file is free content, distributed under the MIT license.
##       (See accompanying file LICENSE.MIT or the original contained
##       within https://opensource.org/licenses/MIT)
##
##############################################################################
##
## Title-
##       ~/src/cpp/lib/obj/README
##
## Purpose-
##       Library implementation documentation.
##
## Last change date-
##       2018/01/01
##
##############################################################################

##############################################################################
## FEATURE:

##############################################################################
## BUGS:

##############################################################################
## TODO:

##############################################################################
## FIXED:
2018/06/05 Memory leak running Stress.cpp (Use Windows Resource Monitor.)
    Stress runs fine for a while, then starts using extended pages.
    At or near the same time, allocation starts increasing.
    Per Resoure Monitor, these allocated pages are not released when garbage
    collection completes.

    Problem: Memory allocation takes relatively long compared to RefLink
    allocation. When allocating memory for an extended RefLink page, other
    RefLink allocations back up behind that allocation. The collector thread
    gets (way) behind and the allocation and release of extended pages keep
    it (way) behind. Even though these extended pages are eventually released,
    the associated storage (apparently) still shows up in the allocated
    storage display, possibly because of fragmentation.

    Solution: In Ref.cpp obtain a (new) garbage collection latch. If the
    extended used page count gets too high, call the collect method. This
    prevents the RefLink extended page count from getting too large.

##############################################################################
## CLOSED:

